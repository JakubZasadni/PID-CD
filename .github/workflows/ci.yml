name: Strojenie i walidacja regulatorów

on:
  workflow_dispatch:
    inputs:
      regulator:
        description: 'Wybierz regulator do przetestowania'
        required: true
        default: 'regulator_pid'
        type: choice
        options:
          - regulator_pid
          - regulator_pi
          - regulator_dwupolozeniowy

jobs:
  tune:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t regulator-sim:test -f kontener/Dockerfile .

      - name: Strojenie regulatorów
        run: |
          docker run --rm \
            -e REGULATOR=${{ github.event.inputs.regulator }} \
            -e TRYB=strojenie \
            -v ${{ github.workspace }}/wyniki:/app/wyniki \
            regulator-sim:test

  validate_zbiornik:
    runs-on: ubuntu-latest
    needs: tune
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t regulator-sim:test -f kontener/Dockerfile .

      - name: Walidacja modelu zbiornik_1rz
        id: zbiornik
        run: |
          docker run --rm \
            -e REGULATOR=${{ github.event.inputs.regulator }} \
            -e TRYB=walidacja \
            -e MODEL=zbiornik_1rz \
            -v ${{ github.workspace }}/wyniki:/app/wyniki \
            regulator-sim:test || echo "FAIL" > result.txt
      - name: Ustaw wynik
        run: |
          if [ -f result.txt ]; then echo "zbiornik=fail" >> $GITHUB_ENV; else echo "zbiornik=pass" >> $GITHUB_ENV; fi

  validate_dwa_zbiorniki:
    runs-on: ubuntu-latest
    needs: tune
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t regulator-sim:test -f kontener/Dockerfile .

      - name: Walidacja modelu dwa_zbiorniki
        id: dwa
        run: |
          docker run --rm \
            -e REGULATOR=${{ github.event.inputs.regulator }} \
            -e TRYB=walidacja \
            -e MODEL=dwa_zbiorniki \
            -v ${{ github.workspace }}/wyniki:/app/wyniki \
            regulator-sim:test || echo "FAIL" > result.txt
      - name: Ustaw wynik
        run: |
          if [ -f result.txt ]; then echo "dwa=fail" >> $GITHUB_ENV; else echo "dwa=pass" >> $GITHUB_ENV; fi

  validate_wahadlo:
    runs-on: ubuntu-latest
    needs: tune
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t regulator-sim:test -f kontener/Dockerfile .

      - name: Walidacja modelu wahadlo_odwrocone
        id: wahadlo
        run: |
          docker run --rm \
            -e REGULATOR=${{ github.event.inputs.regulator }} \
            -e TRYB=walidacja \
            -e MODEL=wahadlo_odwrocone \
            -v ${{ github.workspace }}/wyniki:/app/wyniki \
            regulator-sim:test || echo "FAIL" > result.txt
      - name: Ustaw wynik
        run: |
          if [ -f result.txt ]; then echo "wahadlo=fail" >> $GITHUB_ENV; else echo "wahadlo=pass" >> $GITHUB_ENV; fi

  summary:
    runs-on: ubuntu-latest
    needs: [validate_zbiornik, validate_dwa_zbiorniki, validate_wahadlo]
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t regulator-sim:test -f kontener/Dockerfile .

      - name: Generuj raport zbiorczy
        run: |
          docker run --rm \
            -e REGULATOR=${{ github.event.inputs.regulator }} \
            -v ${{ github.workspace }}/wyniki:/app/wyniki \
            regulator-sim:test python src/ocena_metod.py

      - name: Sprawdź wyniki i zdecyduj o statusie
        run: |
          cd wyniki
          PASS_COUNT=$(grep -o "✅" raport.html | wc -l)
          if [ "$PASS_COUNT" -eq 0 ]; then
            echo "❌ Żaden model nie spełnił progów jakości — pipeline FAIL"
            exit 1
          else
            echo "✅ Walidacja pozytywna — pipeline OK"
          fi

      - name: Upload raportu
        uses: actions/upload-artifact@v4
        with:
          name: raport_${{ github.event.inputs.regulator }}
          path: wyniki/
